{"version":3,"sources":["Form/Form.module.css","ContactsList/ContactItem/ContactItem.module.css","ContactsList/ContactList.module.css","Filter/Filter.module.css","Form/Form.js","ContactsList/ContactItem/ContactItem.js","ContactsList/ContactList.js","Filter/Filter.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ContactForm","state","name","number","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","value","setState","clearInput","handlerSubmit","preventDefault","props","onSubmit","this","className","styles","form","htmlFor","type","id","pattern","title","required","onChange","Component","ContactItem","contacts","onClick","map","contact","item","ContactList","filteredValue","list","Filter","filter","localStorage","getItem","JSON","parse","App","addContact","data","newContact","find","alert","prevState","setItem","stringify","handleFilterValue","deleteContact","currentId","normalizeFilterValue","toLowerCase","filteredContacts","includes","length","defaultProps","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9716433e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3e7DU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__3XxQ9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__lgnMt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__15aHS\"};","import { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport styles from './Form.module.css'\r\n\r\n\r\nexport class ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n      }\r\n    \r\n  nameInputId = shortid.generate();\r\n  numberInputId = shortid.generate();\r\n\r\n  \r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    this.setState({ [name]: value});\r\n  }\r\n\r\n  clearInput = () => {\r\n    this.setState({ name: '', number: ''})\r\n  }\r\n\r\n  handlerSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.clearInput(); \r\n }\r\n\r\n    render() {\r\n        const { name, number } = this.state;\r\n\r\n        return (\r\n        <form className={styles.form} onSubmit={this.handlerSubmit}>\r\n        <label htmlFor={this.nameInputId}>Name </label>          \r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          id={this.nameInputId}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={this.handleChange}\r\n        />\r\n\r\n        <label htmlFor={this.numberInputId}>Number </label>          \r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          id={this.numberInputId}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={this.handleChange}\r\n        />\r\n\r\n        <button type=\"submit\">Add</button>\r\n      </form>\r\n      )}\r\n\r\n}","import styles from './ContactItem.module.css'\r\n\r\nexport const ContactItem = ({ contacts, onClick }) => {\r\n    return (\r\n    <>\r\n        { contacts.map( contact => {\r\n          return (\r\n          <li className={styles.item} key={contact.id}>{contact.name}: {contact.number}\r\n          <button type=\"button\" name={contact.id} onClick={onClick}>Delete</button></li>\r\n          )\r\n        })}\r\n    </>\r\n    )\r\n};","import { ContactItem } from './ContactItem/';\r\nimport styles from './ContactList.module.css'\r\n\r\nexport const ContactList = ({ contacts, onClick, filteredValue }) => {\r\n    return (\r\n    <ul className={styles.list}>\r\n        {filteredValue > 0 ?\r\n        < ContactItem contacts={contacts} onClick={onClick }  />\r\n        : <p>No contacts</p>}\r\n      </ul>\r\n    )\r\n}","import styles from './Filter.module.css';\r\n\r\nexport const Filter = ({ filter, onChange}) => {\r\n    return (\r\n        <input type=\"text\" className={styles.filter} name=\"filter\" value={filter} onChange={onChange}/>\r\n    )\r\n}","import './App.css';\nimport { Component } from 'react';\nimport shortid from 'shortid';\nimport { ContactForm } from './Form';\nimport { ContactList } from './ContactsList';\nimport { Filter } from './Filter';\n\nconst contacts = localStorage.getItem('contacts') !== null ? JSON.parse(localStorage.getItem('contacts')) : [];\nclass App extends Component {\n  static defaultProps = {\n    contacts: contacts,\n    filter: \"\",\n  }\n\n  state = {\n    contacts: this.props.contacts,\n    filter: this.props.filter,\n  }\n\n  addContact = (data) => {\n    const newContactId = shortid.generate();\n    const newContact = {\n      id: newContactId,\n      name: data.name,\n      number: data.number\n    }\n    this.state.contacts.find(contact => \n      contact.name === data.name) ? alert(\"The name is already exist\") \n    : this.state.contacts.find(contact => \n        contact.number === data.number) ? alert(\"The number  is already exist\") \n    : this.setState((prevState) => {\n      localStorage.setItem('contacts', JSON.stringify([...prevState.contacts, newContact]));\n       return {contacts: [...prevState.contacts, newContact]}\n    })\n  }\n\n  handleFilterValue = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  deleteContact = ( e ) => {\n    const currentId = e.currentTarget.name;\n    this.setState((prevState) => {\n      localStorage.setItem('contacts', JSON.stringify(prevState.contacts.filter(contact => contact.id !== currentId)));\n     return { contacts: prevState.contacts.filter(contact => contact.id !== currentId),};\n    });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const normalizeFilterValue = filter.toLowerCase();\n    const filteredContacts = contacts.filter( \n      contact => \n        contact.name.toLowerCase().includes(normalizeFilterValue) ||\n        contact.number.includes(filter)\n    );\n\n    return (\n      <div className=\"App\">\n      <h1 className=\"App__title\"> Phonebooks </h1>\n      <ContactForm onSubmit={this.addContact} />\n      <div className=\"App__contacts__container\">\n      <h2 className=\"App__contacts__title\"> Contacts </h2>\n      <h3 className=\"App__filter__title\"> Find contacts by name </h3>\n      <Filter filter={filter} onChange={this.handleFilterValue}/>\n      <ContactList contacts={filteredContacts} onClick={this.deleteContact} filteredValue={filteredContacts.length}/>\n      </div>\n    </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}